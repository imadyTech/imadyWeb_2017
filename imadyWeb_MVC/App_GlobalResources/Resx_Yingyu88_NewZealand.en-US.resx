<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Sec_Header_Intro" xml:space="preserve">
    <value>Answers exist ahead only for people who are persistent and fearless.</value>
  </data>
  <data name="Sec_Header_PreTitle" xml:space="preserve">
    <value>Our Philosophy</value>
  </data>
  <data name="Sec_Header_Title" xml:space="preserve">
    <value>We will make it!</value>
  </data>
  <data name="Sec_Intro_01_Content" xml:space="preserve">
    <value>Imady seeks to apply various types of intelligent technology in interactive education, interactive entertainment and other fields, to enhance user experience and improve learning effectiveness. Through many changes, our core project has evolved from "Interactive performing platform" and "interactive cartoon" project to the current "Yingyu88" ("English Papa"), an integrated and interactive education program.</value>
  </data>
  <data name="Sec_Intro_01_Name" xml:space="preserve">
    <value>1. Branded Products</value>
  </data>
  <data name="Sec_Intro_02_Content" xml:space="preserve">
    <value>As an independent third party developer, our consulting and software development services help customers to enliven their ideas from concept to realization.</value>
  </data>
  <data name="Sec_Intro_02_Name" xml:space="preserve">
    <value>2. Technical Services</value>
  </data>
  <data name="Sec_Intro_03_Content" xml:space="preserve">
    <value>Our research covers topics including E-commerce, artificial intelligence, motion capturing and recognition, spatial perception, virtual interaction and other fields, and actively looking for opportunities of landing various technical solutions.</value>
  </data>
  <data name="Sec_Intro_03_Name" xml:space="preserve">
    <value>3. Technical Research</value>
  </data>
  <data name="Sec_Intro_SubTitle" xml:space="preserve">
    <value>Suzhou imady Technologies Co., Ltd. was founded in May 2010 in Suzhou. As a venturing enterprise, it was initiated by Frank who has many years experience in IT and entertainment industry and with overseas university degree, as well as his aspiration of pursueing innovative technologies and world changing products.</value>
  </data>
  <data name="Sec_Intro_SubTitle1" xml:space="preserve">
    <value>Imady commits to research of next generation interactive technologies, explores the opportunity of integrating these technologies with educational or entertainment applications, and promote the industrialization and commercialization of new products and business models in China.</value>
  </data>
  <data name="Sec_Intro_Title" xml:space="preserve">
    <value>Introduction of imady</value>
  </data>
  <data name="Sec_Yingyu88_SubTitle" xml:space="preserve">
    <value>An integrated language tutoring service enables happy learning for kids</value>
  </data>
  <data name="Sec_Yingyu88_Title" xml:space="preserve">
    <value>“Yingyu88” Project</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>imady - Suzhou imady Technologies Co., Ltd.</value>
  </data>
</root>